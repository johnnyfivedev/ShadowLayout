Plan:

//* Create preview layout with all kinds of Views and ViewGroups (rounds, squares, rounded buttons)

//* Throw RuntimeException if layout has more than one child

//* Create logic for elevation disabling

//* Create method for shadow visibility

//* Create method for changing shadow color

//* Add public method for shadowRadius changing

//* Add public method for cornerRadius changing

//* Add public method for shadowOffsetX and shadowOffsetY changing

//* Rename dx and dy to shadowOffsetX and shadowOffsetY

//* Add updateUI method (invalidate + request layout)


* Create default shadow which equals view color + alpha (pick default alpha by eye)
    - add minimum possible alpha?

* Make more small methods if possible (refactoring)

* Test button with shadow with transition animation and resize animation

* Add default shadow attrs (and mb default style)

* Rename cornerRadius to shadowCornerRadius



In future:

* Handle several views in layout

* Create public API for users to switch between elevation and shadow on API > 21

* Make parent knew its child corner radius (at least from background drawable)

* Handle shadow offset. Let it not make shadow smaller but move rectangle to dx and dy!?


Features added:

* Visibility changing
* Coloring
